plugins {
    id "fabric-loom" version "1.7-SNAPSHOT"
    id "maven-publish"
}

version = "$mod_version-$release_type+build.$build_number-$project.minecraft_version"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/starnet_essentials.accesswidener")
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url = "https://maven.isxander.dev/releases" }
    maven { url = 'https://maven.quiltmc.org/repository/release' }
    maven { url = 'https://maven.quiltmc.org/repository/snapshot' }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
    maven { url "https://maven.fabricmc.net/" }
}

dependencies {
    minecraft libs.minecraft
    mappings loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2")
        it.officialMojangMappings()
    }
    modImplementation libs.fabric.loader

    modImplementation("net.fabricmc.fabric-api:fabric-api:0.114.0+1.21.3")

    modImplementation ("com.terraformersmc:modmenu:12.0.0")

    implementation include('org.json:json:20220320')
    include(implementation("com.github.CuteNyami:DiscordIPC-Buttons:main"))

    modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:1.1.2")
    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.5.0-beta.3")))
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    filesMatching("Constants.java") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.getRelease().set(21)
}

java {
    withSourcesJar()
    toolchain.getLanguageVersion().set(JavaLanguageVersion.of(21))
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {}
}
